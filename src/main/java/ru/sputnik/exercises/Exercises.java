package ru.sputnik.exercises;

import java.net.URL;
import java.util.ArrayList;
import java.util.List;

public class Exercises {
    // === Задание 1 ===
    //
    // Программисту дали задание написать метод, который принимает на вход произвольную строку и возвращает
    // список символов в этой строке. После некоторых раздумий, он написал нижеследующий метод. Какие проблемы
    // или недостатки вы видите у этого метода? Перепишите его, чтобы устранить эти проблемы, или оставьте как
    // есть, если считаете, что все в порядке.

    /**
     * @return список символов в строке <code>str</code>, или null, если строка пустая
     */
    public static List<Character> getChars(String str) {
        if (str.isEmpty())
            return null;
        else {
            List<Character> chars = new ArrayList<>();
            for (int i = 0; i < str.length(); ++i)
                chars.add(str.charAt(i));
            return chars;
        }
    }

    // === Задание 2 ===
    //
    // Снабдите нижепреведенный метод адекватной документацией.

    public static long powerOfTwo(int power) {
        assert power >= 0;

        if (power == 0)
            return 1;
        else
            return 2 * powerOfTwo(power - 1);
    }

    // === Задание 3 ===
    //
    // Напишите библиотеку методов для инвертирования списков, то есть, для перестановки элементов списка в обратном
    // порядке. Библиотека должна работать со списками строк, а также 32-разрядных и 64-разрядных целых чисел. Какое
    // минимальное число методов потребуется для этого? Попробуйте реализовать библиотеку минимально-возможным числом
    // методов.

    // === Задание 4 ===
    //
    // Реализуйте нижеследующий метод, принимающий на вход произвольный текст, и возвращающий список всех телефонных
    // номеров в формате +X (XXX) XXX-XX-XX, найденных в этом тексте. Метод должен удовлетворять модульным тестам
    // в классе ExercisesTest.

    public static List<String> findAllTelNumbers(String text) {
        throw new RuntimeException("Метод не реализован");
    }

    // === Задание 5 ===
    //
    // Реализуйте метод, который проверяет, что ресурс, на который указывает ссылка, является JPEG-изображением. Метод
    // должен удовлетворять модульным тестам в классе ExercisesTest. Можно использовать любые прикладные библиотеки.

    public static boolean isJPEGResource(URL resourceURL) {
        throw new RuntimeException("Метод не реализован");
    }

    // === Задание 6 ===
    //
    // Напишите модульные тесты для библиотеки инвертирования списков, реализованной в задании 3. Напишите также
    // модульные тесты для методов getChars() и powerOfTwo().
}
